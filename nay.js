function te = () => {
  return IncomingMessage {
  _readableState:
    ReadableState {
    objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
},
    socket:
  Socket {
    connecting: false,
      _hadError: false,
      _handle:
    TCP {
      bytesRead: 223,
        _externalStream: [External],
        fd: 1012,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
      onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
    _parent: null,
      _host: null,
      _readableState:
    ReadableState {
      objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
    readable: true,
      domain: null,
      _events:
    { end: [Array],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      timeout: [Function: socketOnTimeout],
      error: [Array],
        close: [Object],
      data: [Object] },
    _eventsCount: 7,
      _maxListeners: undefined,
      _writableState:
    WritableState {
      objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
      writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
    writable: true,
      allowHalfOpen: true,
      _bytesDispatched: 129,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server:
    Server {
      domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::3003',
        [Symbol(asyncId)]: 8029 },
    _server:
      Server {
      domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::3003',
        [Symbol(asyncId)]: 8029 },
    _idleTimeout: -1,
      _idleNext: null,
      _idlePrev: null,
      _idleStart: 32215,
      _destroyed: false,
      parser: null,
      on: [Function],
      _paused: false,
      read: [Function],
      _consuming: true,
      [Symbol(asyncId)]: 15007,
      [Symbol(bytesRead)]: 0,
      [Symbol(asyncId)]: 15009,
      [Symbol(triggerAsyncId)]: 8029 },
  connection:
    Socket {
    connecting: false,
      _hadError: false,
      _handle:
    TCP {
      bytesRead: 223,
        _externalStream: [External],
        fd: 1012,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
      onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
    _parent: null,
      _host: null,
      _readableState:
    ReadableState {
      objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
    readable: true,
      domain: null,
      _events:
    { end: [Array],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      timeout: [Function: socketOnTimeout],
      error: [Array],
        close: [Object],
      data: [Object] },
    _eventsCount: 7,
      _maxListeners: undefined,
      _writableState:
    WritableState {
      objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
      writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
    writable: true,
      allowHalfOpen: true,
      _bytesDispatched: 129,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server:
    Server {
      domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::3003',
        [Symbol(asyncId)]: 8029 },
    _server:
      Server {
      domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::3003',
        [Symbol(asyncId)]: 8029 },
    _idleTimeout: -1,
      _idleNext: null,
      _idlePrev: null,
      _idleStart: 32215,
      _destroyed: false,
      parser: null,
      on: [Function],
      _paused: false,
      read: [Function],
      _consuming: true,
      [Symbol(asyncId)]: 15007,
      [Symbol(bytesRead)]: 0,
      [Symbol(asyncId)]: 15009,
      [Symbol(triggerAsyncId)]: 8029 },
  httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers:
  { 'sec-websocket-version': '13',
    'sec-websocket-key': 'HlYQSqQefAHEwyal4lD4zg==',
    connection: 'Upgrade',
    upgrade: 'websocket',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits',
    host: 'localhost:3003' },
  rawHeaders:
    [ 'Sec-WebSocket-Version',
      '13',
      'Sec-WebSocket-Key',
      'HlYQSqQefAHEwyal4lD4zg==',
      'Connection',
      'Upgrade',
      'Upgrade',
      'websocket',
      'Sec-WebSocket-Extensions',
      'permessage-deflate; client_max_window_bits',
      'Host',
      'localhost:3003' ],
      trailers: {},
  rawTrailers: [],
    upgrade: true,
    url: '/',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client:
  Socket {
    connecting: false,
      _hadError: false,
      _handle:
    TCP {
      bytesRead: 223,
        _externalStream: [External],
        fd: 1012,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
      onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
    _parent: null,
      _host: null,
      _readableState:
    ReadableState {
      objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
    readable: true,
      domain: null,
      _events:
    { end: [Array],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      timeout: [Function: socketOnTimeout],
      error: [Array],
        close: [Object],
      data: [Object] },
    _eventsCount: 7,
      _maxListeners: undefined,
      _writableState:
    WritableState {
      objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
      writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
    writable: true,
      allowHalfOpen: true,
      _bytesDispatched: 129,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server:
    Server {
      domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
      [Symbol(asyncId)]: 15007,
      [Symbol(bytesRead)]: 0,
      [Symbol(asyncId)]: 15009,
      [Symbol(triggerAsyncId)]: 8029 },
};
}
